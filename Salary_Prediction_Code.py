# Import Libraries and Dataset
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import pickle

dataset = pd.read_csv(r'E:\PYTHONCLASSJUPYTER\PrakashSenapati\Salary_Data.csv')

# Split Dataset (x,y)
x = dataset.iloc[:, :-1].values
y = dataset.iloc[:,1].values

# Split the x,y to 80-20%
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.20, random_state=0)

# Call Simple Linear Regression Algorithm from Sklearn Framework
regressor = LinearRegression()
regressor.fit(x_train, y_train)
y_pred = regressor.predict(x_test)

# Visualize the x_train and y_train Datapoints (There are 24 Datapoints)
plt.scatter(x_train, y_train, color = 'red') 
plt.plot(x_train, regressor.predict(x_train), color = 'blue')
plt.title('Salary vs Experience (Training set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

# Visualize the x_test and y_test Datapoints (There are 6 Datapoints)
plt.scatter(x_test, y_test, color = 'red') 
plt.plot(x_train, regressor.predict(x_train), color = 'blue')
plt.title('Salary vs Experience (Training set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

# Slope is generated from Linear Regression Alogrithmh Which Fit to Dataset
m = regressor.coef_

# Intercept Also Generated by Model
c = regressor.intercept_

# Predict or Forecast the Future Data Which We Not Trained Before
y_12 = 9312 * 12 + 26780
y_20 = 9312 * 20 + 26780

# Check overfitting (low bias high variance)
bias = regressor.score(x_train, y_train)

# Check underfitting (high bias low variance)
variance = regressor.score(x_test,y_test)

# Deployment in Streamlit/Flask & Html
file_name = 'Salary_Prediction.pkl'
with open(file_name, 'wb') as file:
    pickle.dump(regressor, file)
